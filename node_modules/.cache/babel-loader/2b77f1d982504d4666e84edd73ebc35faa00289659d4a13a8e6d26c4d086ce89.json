{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items.payload.items = action.payload.items;\n    },\n    AddItem(state, action) {\n      const itemToAdd = action.payload;\n      state.totalQuantity++;\n      const existingItem = state.items.find(item => item.id == itemToAdd.id);\n      if (!existingItem) {\n        state.items.push({\n          id: itemToAdd.id,\n          price: itemToAdd.price,\n          totalPrice: itemToAdd.price,\n          quantity: 1,\n          title: itemToAdd.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + itemToAdd.price;\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      state.totalQuantity--;\n      const existingItem = state.items.find(item => item.id == id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n    purchase() {}\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","cartSlice","name","initialState","reducers","replaceCart","state","action","payload","AddItem","itemToAdd","existingItem","find","item","id","push","price","totalPrice","quantity","title","removeItem","filter","purchase","cartActions","actions"],"sources":["C:/Users/samtu/react-course/react-redux-advanced/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCartState = {\r\n    items: [],\r\n    totalQuantity: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items.payload.items = action.payload.items;\r\n        },\r\n        AddItem(state, action) {\r\n            const itemToAdd = action.payload;\r\n            state.totalQuantity++;\r\n            const existingItem = state.items.find(item => item.id == itemToAdd.id);\r\n            if (!existingItem) {\r\n                state.items.push({\r\n                    id: itemToAdd.id,\r\n                    price: itemToAdd.price,\r\n                    totalPrice: itemToAdd.price,\r\n                    quantity: 1,\r\n                    title: itemToAdd.title\r\n                });\r\n            } else {\r\n                existingItem.quantity++;\r\n                existingItem.totalPrice = existingItem.totalPrice + itemToAdd.price;\r\n            }\r\n        },\r\n        removeItem(state, action) {\r\n            const id = action.payload;\r\n            state.totalQuantity--;\r\n            const existingItem = state.items.find(item => item.id == id);\r\n            if (existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id);\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n            }\r\n\r\n        },\r\n        purchase() { }\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACN,aAAa,GAAGO,MAAM,CAACC,OAAO,CAACR,aAAa;MAClDM,KAAK,CAACP,KAAK,CAACS,OAAO,CAACT,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;IACpD,CAAC;IACDU,OAAOA,CAACH,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAMG,SAAS,GAAGH,MAAM,CAACC,OAAO;MAChCF,KAAK,CAACN,aAAa,EAAE;MACrB,MAAMW,YAAY,GAAGL,KAAK,CAACP,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIJ,SAAS,CAACI,EAAE,CAAC;MACtE,IAAI,CAACH,YAAY,EAAE;QACfL,KAAK,CAACP,KAAK,CAACgB,IAAI,CAAC;UACbD,EAAE,EAAEJ,SAAS,CAACI,EAAE;UAChBE,KAAK,EAAEN,SAAS,CAACM,KAAK;UACtBC,UAAU,EAAEP,SAAS,CAACM,KAAK;UAC3BE,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAET,SAAS,CAACS;QACrB,CAAC,CAAC;MACN,CAAC,MAAM;QACHR,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACM,UAAU,GAAGN,YAAY,CAACM,UAAU,GAAGP,SAAS,CAACM,KAAK;MACvE;IACJ,CAAC;IACDI,UAAUA,CAACd,KAAK,EAAEC,MAAM,EAAE;MACtB,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzBF,KAAK,CAACN,aAAa,EAAE;MACrB,MAAMW,YAAY,GAAGL,KAAK,CAACP,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,IAAIA,EAAE,CAAC;MAC5D,IAAIH,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC7BZ,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACsB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACM,UAAU,GAAGN,YAAY,CAACM,UAAU,GAAGN,YAAY,CAACK,KAAK;MAC1E;IAEJ,CAAC;IACDM,QAAQA,CAAA,EAAG,CAAE;EACjB;AACJ,CAAC,CAAC;AAIF,OAAO,MAAMC,WAAW,GAAGtB,SAAS,CAACuB,OAAO;AAC5C,eAAevB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}